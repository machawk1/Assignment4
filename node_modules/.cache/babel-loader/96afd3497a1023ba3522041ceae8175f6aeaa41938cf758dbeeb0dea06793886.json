{"ast":null,"code":"import React,{useState}from'react';import UpdatedPlaylist from'./Components/UpdatedPlaylist';import Song from'./Components/Song';import Podcast from'./Components/Podcast';import previousToggle from'./Components/Previous';import nextToggle from'./Components/Next';import ShuffleToggle from'./Components/Shuffle';import PlayandPauseToggle from'./Components/Play';// Assuming UpdatedPlaylist is the component we discussed\n// Import other necessary components or assets\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Example playlist data\nconst[playlist,setPlaylist]=useState([{title:'Song One',artist:'Artist One',year:2020,episode:null,episodeTitle:null,season:null},{title:null,artist:null,year:null,episode:'Episode One',episodeTitle:'The Beginning',season:1}// Add more items as needed\n]);const[isPlaying,setIsPlaying]=useState(false);const[currentTrackIndex,setCurrentTrackIndex]=useState(null);// Placeholder functions for event handlers\nconst manageShuffle=()=>{// Logic for shuffling playlist\n};const managePlayPause=()=>{setIsPlaying(!isPlaying);};const previousToggle=()=>{// Logic to go to the previous track\n};const nextToggle=()=>{// Logic to go to the next track\n};const manageDoubleClick=(title,episodeTitle)=>{// Logic to handle double click, possibly to play the item\nconst index=playlist.findIndex(item=>item.title===title||item.episodeTitle===episodeTitle);setCurrentTrackIndex(index);setIsPlaying(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Playlist App\"}),/*#__PURE__*/_jsx(UpdatedPlaylist,{playlist:playlist,isPlaying:isPlaying,manageShuffle:manageShuffle,managePlayPause:managePlayPause,previousToggle:previousToggle,nextToggle:nextToggle,currentTrackIndex:currentTrackIndex,manageDoubleClick:manageDoubleClick})]});}export default App;","map":{"version":3,"names":["React","useState","UpdatedPlaylist","Song","Podcast","previousToggle","nextToggle","ShuffleToggle","PlayandPauseToggle","jsx","_jsx","jsxs","_jsxs","App","playlist","setPlaylist","title","artist","year","episode","episodeTitle","season","isPlaying","setIsPlaying","currentTrackIndex","setCurrentTrackIndex","manageShuffle","managePlayPause","manageDoubleClick","index","findIndex","item","className","children"],"sources":["/private/tmp/Assignment4/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport UpdatedPlaylist from './Components/UpdatedPlaylist'; \nimport Song from './Components/Song';\nimport Podcast from './Components/Podcast';\nimport previousToggle from './Components/Previous';\nimport nextToggle from './Components/Next';\nimport ShuffleToggle from './Components/Shuffle';\nimport PlayandPauseToggle from './Components/Play';\n\n// Assuming UpdatedPlaylist is the component we discussed\n// Import other necessary components or assets\n\nfunction App() {\n  // Example playlist data\n  const [playlist, setPlaylist] = useState([\n    { title: 'Song One', artist: 'Artist One', year: 2020, episode: null, episodeTitle: null, season: null },\n    { title: null, artist: null, year: null, episode: 'Episode One', episodeTitle: 'The Beginning', season: 1 },\n    // Add more items as needed\n  ]);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n\n  // Placeholder functions for event handlers\n  const manageShuffle = () => {\n    // Logic for shuffling playlist\n  };\n\n  const managePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const previousToggle = () => {\n    // Logic to go to the previous track\n  };\n\n  const nextToggle = () => {\n    // Logic to go to the next track\n  };\n\n  const manageDoubleClick = (title, episodeTitle) => {\n    // Logic to handle double click, possibly to play the item\n    const index = playlist.findIndex(item => item.title === title || item.episodeTitle === episodeTitle);\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>My Playlist App</h1>\n      <UpdatedPlaylist\n        playlist={playlist}\n        isPlaying={isPlaying}\n        manageShuffle={manageShuffle}\n        managePlayPause={managePlayPause}\n        previousToggle={previousToggle}\n        nextToggle={nextToggle}\n        currentTrackIndex={currentTrackIndex}\n        manageDoubleClick={manageDoubleClick}\n      />\n      {/* Other components or content can be added here */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,cAAc,KAAM,uBAAuB,CAClD,MAAO,CAAAC,UAAU,KAAM,mBAAmB,CAC1C,MAAO,CAAAC,aAAa,KAAM,sBAAsB,CAChD,MAAO,CAAAC,kBAAkB,KAAM,mBAAmB,CAElD;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,CACvC,CAAEe,KAAK,CAAE,UAAU,CAAEC,MAAM,CAAE,YAAY,CAAEC,IAAI,CAAE,IAAI,CAAEC,OAAO,CAAE,IAAI,CAAEC,YAAY,CAAE,IAAI,CAAEC,MAAM,CAAE,IAAK,CAAC,CACxG,CAAEL,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,IAAI,CAAEC,IAAI,CAAE,IAAI,CAAEC,OAAO,CAAE,aAAa,CAAEC,YAAY,CAAE,eAAe,CAAEC,MAAM,CAAE,CAAE,CAC1G;AAAA,CACD,CAAC,CAEF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGtB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACuB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGxB,QAAQ,CAAC,IAAI,CAAC,CAEhE;AACA,KAAM,CAAAyB,aAAa,CAAGA,CAAA,GAAM,CAC1B;AAAA,CACD,CAED,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5BJ,YAAY,CAAC,CAACD,SAAS,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAjB,cAAc,CAAGA,CAAA,GAAM,CAC3B;AAAA,CACD,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB;AAAA,CACD,CAED,KAAM,CAAAsB,iBAAiB,CAAGA,CAACZ,KAAK,CAAEI,YAAY,GAAK,CACjD;AACA,KAAM,CAAAS,KAAK,CAAGf,QAAQ,CAACgB,SAAS,CAACC,IAAI,EAAIA,IAAI,CAACf,KAAK,GAAKA,KAAK,EAAIe,IAAI,CAACX,YAAY,GAAKA,YAAY,CAAC,CACpGK,oBAAoB,CAACI,KAAK,CAAC,CAC3BN,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED,mBACEX,KAAA,QAAKoB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBvB,IAAA,OAAAuB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBvB,IAAA,CAACR,eAAe,EACdY,QAAQ,CAAEA,QAAS,CACnBQ,SAAS,CAAEA,SAAU,CACrBI,aAAa,CAAEA,aAAc,CAC7BC,eAAe,CAAEA,eAAgB,CACjCtB,cAAc,CAAEA,cAAe,CAC/BC,UAAU,CAAEA,UAAW,CACvBkB,iBAAiB,CAAEA,iBAAkB,CACrCI,iBAAiB,CAAEA,iBAAkB,CACtC,CAAC,EAEC,CAAC,CAEV,CAEA,cAAe,CAAAf,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}